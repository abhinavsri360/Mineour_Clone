{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Login.js","components/Signup.js","components/Dashboard.js","components/PrivateRoute.js","components/UpdateProfile.js","components/ForgotPassword.js","components/App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","Login","emailRef","useRef","passwordRef","error","setError","history","useHistory","e","a","preventDefault","current","push","Card","style","backgroundColor","color","borderColor","Body","className","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","to","Signup","passwordConfirmRef","Dashboard","onClick","PrivateRoute","Component","component","rest","render","props","UpdateProfile","promises","Promise","all","then","catch","finally","defaultValue","placeholder","ForgotPassword","message","setMessage","App","Container","minHeight","minWidth","backgroundImage","maxWidth","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82672a2a.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/auth'\n\nconst app = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\n})\n\nexport const auth = app.auth()\nexport default app\n","import React, { useContext, useState, useEffect } from 'react'\nimport { auth } from '../firebase'\n\nconst AuthContext = React.createContext()\n\nexport function useAuth () {\n  return useContext(AuthContext)\n}\n\nexport function AuthProvider ({ children }) {\n  const [currentUser, setCurrentUser] = useState()\n  const [loading, setLoading] = useState(true)\n\n  function login (email, password) {\n    return auth.signInWithEmailAndPassword(email, password)\n  }\n\n  function signup (email, password) {\n    return auth.createUserWithEmailAndPassword(email, password)\n  }\n\n  function updateEmail (email) {\n    return currentUser.updateEmail(email)\n  }\n\n  function updatePassword (password) {\n    return currentUser.updatePassword(password)\n  }\n\n  function resetPassword (email) {\n    auth.sendPasswordResetEmail(email)\n  }\n\n  function logout () {\n    return auth.signOut()\n  }\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setLoading(false)\n      setCurrentUser(user)\n    })\n\n    return unsubscribe\n  }, [])\n\n  const value = {\n    currentUser,\n    login,\n    signup,\n    logout,\n    resetPassword,\n    updateEmail,\n    updatePassword\n  }\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  )\n}\n","import React, { useRef, useState } from 'react'\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\nimport { useAuth } from '../contexts/AuthContext'\nimport { Link, useHistory } from 'react-router-dom'\n\nimport { Container } from 'react-bootstrap'\n\nexport default function Login () {\n  const emailRef = useRef()\n  const passwordRef = useRef()\n  const { login } = useAuth()\n  const [error, setError] = useState('')\n  const [loading, setLoading] = useState(false)\n  const history = useHistory()\n\n  async function handleSubmit (e) {\n    e.preventDefault()\n\n    try {\n      setError('')\n      setLoading(true)\n      await login(emailRef.current.value, passwordRef.current.value)\n      history.push('/')\n    } catch {\n      setError('Failed to log in')\n    }\n\n    setLoading(false)\n  }\n\n  \n  \n  const card_styling = {\n    backgroundColor: 'white',\n    color: 'Black',\n    borderColor: 'white'\n\n  };\n\n  return (\n    <>\n        <Card style={card_styling}>\n          <Card.Body>\n            <h2 className='text-center mb-4'>Log In</h2>\n            {error && <Alert variant='danger'>{error}</Alert>}\n            <Form onSubmit={handleSubmit}>\n              <Form.Group id='email'>\n                <Form.Label>Email</Form.Label>\n                <Form.Control type='email' ref={emailRef} required />\n              </Form.Group>\n              <Form.Group id='password'>\n                <Form.Label>Password</Form.Label>\n                <Form.Control type='password' ref={passwordRef} required />\n              </Form.Group>\n              <Button disabled={loading} className='w-100' type='submit'>\n                Log In\n              </Button>\n            </Form>\n            <div className='w-100 text-center mt-3'>\n              <Link to='/forgot-password'>Forgot Password?</Link>\n            </div>\n          </Card.Body>\n        </Card>\n        <div className='w-100 text-center mt-2'>\n          Need an account? <Link to='/signup'>Sign Up</Link>\n        </div>\n    </>\n  )\n}\n\n","import React, { useRef, useState } from 'react'\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\nimport { useAuth } from '../contexts/AuthContext'\nimport { Link, useHistory } from 'react-router-dom'\n\nexport default function Signup () {\n  const emailRef = useRef()\n  const passwordRef = useRef()\n  const passwordConfirmRef = useRef()\n  const { signup } = useAuth()\n  const [error, setError] = useState('')\n  const [loading, setLoading] = useState(false)\n  const history = useHistory()\n\n  async function handleSubmit (e) {\n    e.preventDefault()\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError('Passwords do not match')\n    }\n\n    try {\n      setError('')\n      setLoading(true)\n      await signup(emailRef.current.value, passwordRef.current.value)\n      history.push('/')\n    } catch {\n      setError('Failed to create an account')\n    }\n\n    setLoading(false)\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className='text-center mb-4'>Sign Up</h2>\n          {error && <Alert variant='danger'>{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id='email'>\n              <Form.Label>Email</Form.Label>\n              <Form.Control type='email' ref={emailRef} required />\n            </Form.Group>\n            <Form.Group id='password'>\n              <Form.Label>Password</Form.Label>\n              <Form.Control type='password' ref={passwordRef} required />\n            </Form.Group>\n            <Form.Group id='password-confirm'>\n              <Form.Label>Password Confirmation</Form.Label>\n              <Form.Control type='password' ref={passwordConfirmRef} required />\n            </Form.Group>\n            <Button disabled={loading} className='w-100' type='submit'>\n              Sign Up\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n      <div className='w-100 text-center mt-2'>\n        Already have an account? <Link to='/login'>Log In</Link>\n      </div>\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport { Card, Button, Alert } from 'react-bootstrap'\nimport { useAuth } from '../contexts/AuthContext'\nimport { Link, useHistory } from 'react-router-dom'\n\nexport default function Dashboard () {\n  const [error, setError] = useState('')\n  const { currentUser, logout } = useAuth()\n  const history = useHistory()\n\n  async function handleLogout () {\n    setError('')\n\n    try {\n      await logout()\n      history.push('/login')\n    } catch {\n      setError('Failed to log out')\n    }\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className='text-center mb-4'>Profile</h2>\n          {error && <Alert variant='danger'>{error}</Alert>}\n          <strong>Email:</strong> {currentUser.email}\n          <Link to='/update-profile' className='btn btn-primary w-100 mt-3'>\n            Update Profile\n          </Link>\n        </Card.Body>\n      </Card>\n      <div className='w-100 text-center mt-2'>\n        <Button variant='link' onClick={handleLogout}>\n          Log Out\n        </Button>\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useAuth } from '../contexts/AuthContext'\n\nexport default function PrivateRoute ({ component: Component, ...rest }) {\n  const { currentUser } = useAuth()\n\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        return currentUser ? <Component {...props} /> : <Redirect to='/login' />\n      }}\n    />\n  )\n}\n","import React, { useRef, useState } from 'react'\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\nimport { useAuth } from '../contexts/AuthContext'\nimport { Link, useHistory } from 'react-router-dom'\n\nexport default function UpdateProfile () {\n  const emailRef = useRef()\n  const passwordRef = useRef()\n  const passwordConfirmRef = useRef()\n  const { currentUser, updatePassword, updateEmail } = useAuth()\n  const [error, setError] = useState('')\n  const [loading, setLoading] = useState(false)\n  const history = useHistory()\n\n  function handleSubmit (e) {\n    e.preventDefault()\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError('Passwords do not match')\n    }\n\n    const promises = []\n    setLoading(true)\n    setError('')\n\n    if (emailRef.current.value !== currentUser.email) {\n      promises.push(updateEmail(emailRef.current.value))\n    }\n    if (passwordRef.current.value) {\n      promises.push(updatePassword(passwordRef.current.value))\n    }\n\n    Promise.all(promises)\n      .then(() => {\n        history.push('/')\n      })\n      .catch(() => {\n        setError('Failed to update account')\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className='text-center mb-4'>Update Profile</h2>\n          {error && <Alert variant='danger'>{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id='email'>\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type='email'\n                ref={emailRef}\n                required\n                defaultValue={currentUser.email}\n              />\n            </Form.Group>\n            <Form.Group id='password'>\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type='password'\n                ref={passwordRef}\n                placeholder='Leave blank to keep the same'\n              />\n            </Form.Group>\n            <Form.Group id='password-confirm'>\n              <Form.Label>Password Confirmation</Form.Label>\n              <Form.Control\n                type='password'\n                ref={passwordConfirmRef}\n                placeholder='Leave blank to keep the same'\n              />\n            </Form.Group>\n            <Button disabled={loading} className='w-100' type='submit'>\n              Update\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n      <div className='w-100 text-center mt-2'>\n        <Link to='/'>Cancel</Link>\n      </div>\n    </>\n  )\n}\n","import React, { useRef, useState } from 'react'\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\nimport { useAuth } from '../contexts/AuthContext'\nimport { Link } from 'react-router-dom'\n\nexport default function ForgotPassword () {\n  const emailRef = useRef()\n  const { resetPassword } = useAuth()\n  const [error, setError] = useState('')\n  const [message, setMessage] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  async function handleSubmit (e) {\n    e.preventDefault()\n\n    try {\n      setMessage('')\n      setError('')\n      setLoading(true)\n      await resetPassword(emailRef.current.value)\n      setMessage('Check your inbox for further instructions')\n    } catch {\n      setError('Failed to reset password')\n    }\n\n    setLoading(false)\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className='text-center mb-4'>Password Reset</h2>\n          {error && <Alert variant='danger'>{error}</Alert>}\n          {message && <Alert variant='success'>{message}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id='email'>\n              <Form.Label>Email</Form.Label>\n              <Form.Control type='email' ref={emailRef} required />\n            </Form.Group>\n            <Button disabled={loading} className='w-100' type='submit'>\n              Reset Password\n            </Button>\n          </Form>\n          <div className='w-100 text-center mt-3'>\n            <Link to='/login'>Login</Link>\n          </div>\n        </Card.Body>\n      </Card>\n      <div className='w-100 text-center mt-2'>\n        Need an account? <Link to='/signup'>Sign Up</Link>\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport Login from './Login'\nimport Signup from './Signup'\nimport Dashboard from './Dashboard'\nimport PrivateRoute from './PrivateRoute'\nimport UpdateProfile from './UpdateProfile'\nimport ForgotPassword from './ForgotPassword'\nimport { Container } from 'react-bootstrap'\nimport { AuthProvider } from '../contexts/AuthContext'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\n\n\nfunction App () {\n\n  const container_styling = {\n    minHeight: '100vh',\n    minWidth: '100%',\n    backgroundImage: `url(https://drive.google.com/uc?export=view&id=1crdOVRgDs0sozdktJ982iGikET5hMlSI)`    \n  };\n\n\n  return (\n    <Container className='d-flex align-items-center justify-content-center' style={container_styling}>\n      <div className='w-100' style={{ maxWidth: '400px' }}>\n        <Router>\n          <AuthProvider>\n            <Switch>\n              <PrivateRoute exact path='/' component={Dashboard} />\n              <PrivateRoute path='/update-profile' component={UpdateProfile} />\n              <Route path='/signup' component={Signup} />\n              <Route path='/login' component={Login} />\n              <Route path='/forgot-password' component={ForgotPassword} />\n            </Switch>\n          </AuthProvider>\n        </Router>\n      </div>\n    </Container>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}