{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Login.js","components/Signup.js","components/Dashboard.js","components/PrivateRoute.js","components/UpdateProfile.js","components/ForgotPassword.js","components/App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","Login","emailRef","useRef","passwordRef","error","setError","history","useHistory","e","a","preventDefault","current","push","Card","Body","className","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","to","Signup","passwordConfirmRef","Dashboard","onClick","PrivateRoute","Component","component","rest","render","props","UpdateProfile","promises","Promise","all","then","catch","finally","defaultValue","placeholder","ForgotPassword","message","setMessage","App","Container","style","minHeight","maxWidth","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a12ec44e.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\n\r\nconst app = firebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n})\r\n\r\nexport const auth = app.auth()\r\nexport default app\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport { auth } from '../firebase'\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth () {\r\n  return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider ({ children }) {\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  function login (email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  function signup (email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  function updateEmail (email) {\r\n    return currentUser.updateEmail(email)\r\n  }\r\n\r\n  function updatePassword (password) {\r\n    return currentUser.updatePassword(password)\r\n  }\r\n\r\n  function resetPassword (email) {\r\n    auth.sendPasswordResetEmail(email)\r\n  }\r\n\r\n  function logout () {\r\n    return auth.signOut()\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setLoading(false)\r\n      setCurrentUser(user)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword\r\n  }\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nexport default function Login () {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const { login } = useAuth()\r\n  const [error, setError] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const history = useHistory()\r\n\r\n  async function handleSubmit (e) {\r\n    e.preventDefault()\r\n\r\n    try {\r\n      setError('')\r\n      setLoading(true)\r\n      await login(emailRef.current.value, passwordRef.current.value)\r\n      history.push('/')\r\n    } catch {\r\n      setError('Failed to log in')\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className='text-center mb-4'>Log In</h2>\r\n          {error && <Alert variant='danger'>{error}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id='email'>\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type='email' ref={emailRef} required />\r\n            </Form.Group>\r\n            <Form.Group id='password'>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type='password' ref={passwordRef} required />\r\n            </Form.Group>\r\n            <Button disabled={loading} className='w-100' type='submit'>\r\n              Log In\r\n            </Button>\r\n          </Form>\r\n          <div className='w-100 text-center mt-3'>\r\n            <Link to='/forgot-password'>Forgot Password?</Link>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className='w-100 text-center mt-2'>\r\n        Need an account? <Link to='/signup'>Sign Up</Link>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nexport default function Signup () {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const { signup } = useAuth()\r\n  const [error, setError] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const history = useHistory()\r\n\r\n  async function handleSubmit (e) {\r\n    e.preventDefault()\r\n\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError('Passwords do not match')\r\n    }\r\n\r\n    try {\r\n      setError('')\r\n      setLoading(true)\r\n      await signup(emailRef.current.value, passwordRef.current.value)\r\n      history.push('/')\r\n    } catch {\r\n      setError('Failed to create an account')\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className='text-center mb-4'>Sign Up</h2>\r\n          {error && <Alert variant='danger'>{error}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id='email'>\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type='email' ref={emailRef} required />\r\n            </Form.Group>\r\n            <Form.Group id='password'>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type='password' ref={passwordRef} required />\r\n            </Form.Group>\r\n            <Form.Group id='password-confirm'>\r\n              <Form.Label>Password Confirmation</Form.Label>\r\n              <Form.Control type='password' ref={passwordConfirmRef} required />\r\n            </Form.Group>\r\n            <Button disabled={loading} className='w-100' type='submit'>\r\n              Sign Up\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className='w-100 text-center mt-2'>\r\n        Already have an account? <Link to='/login'>Log In</Link>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Card, Button, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nexport default function Dashboard () {\r\n  const [error, setError] = useState('')\r\n  const { currentUser, logout } = useAuth()\r\n  const history = useHistory()\r\n\r\n  async function handleLogout () {\r\n    setError('')\r\n\r\n    try {\r\n      await logout()\r\n      history.push('/login')\r\n    } catch {\r\n      setError('Failed to log out')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className='text-center mb-4'>Profile</h2>\r\n          {error && <Alert variant='danger'>{error}</Alert>}\r\n          <strong>Email:</strong> {currentUser.email}\r\n          <Link to='/update-profile' className='btn btn-primary w-100 mt-3'>\r\n            Update Profile\r\n          </Link>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className='w-100 text-center mt-2'>\r\n        <Button variant='link' onClick={handleLogout}>\r\n          Log Out\r\n        </Button>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\nexport default function PrivateRoute ({ component: Component, ...rest }) {\r\n  const { currentUser } = useAuth()\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        return currentUser ? <Component {...props} /> : <Redirect to='/login' />\r\n      }}\r\n    />\r\n  )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nexport default function UpdateProfile () {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const { currentUser, updatePassword, updateEmail } = useAuth()\r\n  const [error, setError] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const history = useHistory()\r\n\r\n  function handleSubmit (e) {\r\n    e.preventDefault()\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError('Passwords do not match')\r\n    }\r\n\r\n    const promises = []\r\n    setLoading(true)\r\n    setError('')\r\n\r\n    if (emailRef.current.value !== currentUser.email) {\r\n      promises.push(updateEmail(emailRef.current.value))\r\n    }\r\n    if (passwordRef.current.value) {\r\n      promises.push(updatePassword(passwordRef.current.value))\r\n    }\r\n\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        history.push('/')\r\n      })\r\n      .catch(() => {\r\n        setError('Failed to update account')\r\n      })\r\n      .finally(() => {\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className='text-center mb-4'>Update Profile</h2>\r\n          {error && <Alert variant='danger'>{error}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id='email'>\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                ref={emailRef}\r\n                required\r\n                defaultValue={currentUser.email}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group id='password'>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                ref={passwordRef}\r\n                placeholder='Leave blank to keep the same'\r\n              />\r\n            </Form.Group>\r\n            <Form.Group id='password-confirm'>\r\n              <Form.Label>Password Confirmation</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                ref={passwordConfirmRef}\r\n                placeholder='Leave blank to keep the same'\r\n              />\r\n            </Form.Group>\r\n            <Button disabled={loading} className='w-100' type='submit'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className='w-100 text-center mt-2'>\r\n        <Link to='/'>Cancel</Link>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function ForgotPassword () {\r\n  const emailRef = useRef()\r\n  const { resetPassword } = useAuth()\r\n  const [error, setError] = useState('')\r\n  const [message, setMessage] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  async function handleSubmit (e) {\r\n    e.preventDefault()\r\n\r\n    try {\r\n      setMessage('')\r\n      setError('')\r\n      setLoading(true)\r\n      await resetPassword(emailRef.current.value)\r\n      setMessage('Check your inbox for further instructions')\r\n    } catch {\r\n      setError('Failed to reset password')\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className='text-center mb-4'>Password Reset</h2>\r\n          {error && <Alert variant='danger'>{error}</Alert>}\r\n          {message && <Alert variant='success'>{message}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id='email'>\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type='email' ref={emailRef} required />\r\n            </Form.Group>\r\n            <Button disabled={loading} className='w-100' type='submit'>\r\n              Reset Password\r\n            </Button>\r\n          </Form>\r\n          <div className='w-100 text-center mt-3'>\r\n            <Link to='/login'>Login</Link>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className='w-100 text-center mt-2'>\r\n        Need an account? <Link to='/signup'>Sign Up</Link>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Login from './Login'\r\nimport Signup from './Signup'\r\nimport Dashboard from './Dashboard'\r\nimport PrivateRoute from './PrivateRoute'\r\nimport UpdateProfile from './UpdateProfile'\r\nimport ForgotPassword from './ForgotPassword'\r\nimport { Container } from 'react-bootstrap'\r\nimport { AuthProvider } from '../contexts/AuthContext'\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\nfunction App () {\r\n  return (\r\n    <Container className='d-flex align-items-center justify-content-center' style={{ minHeight: '100vh' }}>\r\n      <div className='w-100' style={{ maxWidth: '400px' }}>\r\n        <Router>\r\n          <AuthProvider>\r\n            <Switch>\r\n              <PrivateRoute exact path='/' component={Dashboard} />\r\n              <PrivateRoute path='/update-profile' component={UpdateProfile} />\r\n              <Route path='/signup' component={Signup} />\r\n              <Route path='/login' component={Login} />\r\n              <Route path='/forgot-password' component={ForgotPassword} />\r\n            </Switch>\r\n          </AuthProvider>\r\n        </Router>\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}